// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/clientes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Listar clientes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Cliente"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro ao listar clientes",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Criar cliente",
                "parameters": [
                    {
                        "description": "Dados do cliente",
                        "name": "cliente",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CriarClienteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Cliente"
                        }
                    },
                    "400": {
                        "description": "Erro ao criar cliente",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/clientes/cpf/{cpf}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Buscar cliente por CPF",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do cliente",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Cliente"
                        }
                    },
                    "404": {
                        "description": "Cliente não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/clientes/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Buscar cliente por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do cliente",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Cliente"
                        }
                    },
                    "404": {
                        "description": "Cliente não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Atualizar cliente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do cliente",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do cliente",
                        "name": "cliente",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AtualizarClienteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Cliente"
                        }
                    },
                    "400": {
                        "description": "Erro ao atualizar cliente",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Deletar cliente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do cliente",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Cliente deletado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro ao deletar cliente",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/pedidos": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Listar pedidos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status do pedido",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID do cliente",
                        "name": "cliente_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Pedido"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro ao listar pedidos",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Criar pedido",
                "parameters": [
                    {
                        "description": "Dados do pedido",
                        "name": "pedido",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CriarPedidoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro ao criar pedido",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pedidos/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Buscar pedido por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do pedido",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Pedido"
                        }
                    },
                    "404": {
                        "description": "Pedido não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pedidos/{id}/status": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Atualizar status do pedido",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do pedido",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Novo status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AtualizarStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Erro ao atualizar status do pedido",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/produtos": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "produtos"
                ],
                "summary": "Listar produtos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Categoria do produto",
                        "name": "categoria",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Produto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro ao listar produtos",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "produtos"
                ],
                "summary": "Criar produto",
                "parameters": [
                    {
                        "description": "Dados do produto",
                        "name": "produto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CriarProdutoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Produto"
                        }
                    },
                    "400": {
                        "description": "Erro ao criar produto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/produtos/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "produtos"
                ],
                "summary": "Atualizar produto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do produto",
                        "name": "produto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AtualizarProdutoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Produto"
                        }
                    },
                    "400": {
                        "description": "Erro ao atualizar produto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "produtos"
                ],
                "summary": "Deletar produto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Produto deletado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro ao deletar produto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Categoria": {
            "type": "string",
            "enum": [
                "LANCHE",
                "ACOMPANHAMENTO",
                "BEBIDA",
                "SOBREMESA"
            ],
            "x-enum-varnames": [
                "CategoriaLanche",
                "CategoriaAcompanhamento",
                "CategoriaBebida",
                "CategoriaSobremesa"
            ]
        },
        "domain.Cliente": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "telefone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.ItemPedido": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "observacao": {
                    "type": "string"
                },
                "preco": {
                    "type": "number"
                },
                "produto_id": {
                    "type": "string"
                },
                "quantidade": {
                    "type": "integer"
                }
            }
        },
        "domain.Pedido": {
            "type": "object",
            "properties": {
                "cliente_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "itens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.ItemPedido"
                    }
                },
                "status": {
                    "$ref": "#/definitions/domain.StatusPedido"
                },
                "updated_at": {
                    "type": "string"
                },
                "valor_total": {
                    "type": "number"
                }
            }
        },
        "domain.Produto": {
            "type": "object",
            "properties": {
                "categoria": {
                    "$ref": "#/definitions/domain.Categoria"
                },
                "created_at": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "disponivel": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "preco": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.StatusPedido": {
            "type": "string",
            "enum": [
                "RECEBIDO",
                "EM_PREPARACAO",
                "PRONTO",
                "FINALIZADO"
            ],
            "x-enum-varnames": [
                "StatusRecebido",
                "StatusEmPreparacao",
                "StatusPronto",
                "StatusFinalizado"
            ]
        },
        "handlers.AtualizarClienteRequest": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "telefone": {
                    "type": "string"
                }
            }
        },
        "handlers.AtualizarProdutoRequest": {
            "type": "object",
            "properties": {
                "categoria": {
                    "$ref": "#/definitions/domain.Categoria"
                },
                "descricao": {
                    "type": "string"
                },
                "disponivel": {
                    "type": "boolean"
                },
                "nome": {
                    "type": "string"
                },
                "preco": {
                    "type": "number"
                }
            }
        },
        "handlers.AtualizarStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/domain.StatusPedido"
                }
            }
        },
        "handlers.CriarClienteRequest": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "telefone": {
                    "type": "string"
                }
            }
        },
        "handlers.CriarItemPedidoRequest": {
            "type": "object",
            "properties": {
                "observacao": {
                    "type": "string"
                },
                "produto_id": {
                    "type": "string"
                },
                "quantidade": {
                    "type": "integer"
                }
            }
        },
        "handlers.CriarPedidoRequest": {
            "type": "object",
            "properties": {
                "cliente_id": {
                    "type": "string"
                },
                "itens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CriarItemPedidoRequest"
                    }
                }
            }
        },
        "handlers.CriarProdutoRequest": {
            "type": "object",
            "properties": {
                "categoria": {
                    "$ref": "#/definitions/domain.Categoria"
                },
                "descricao": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "preco": {
                    "type": "number"
                }
            }
        },
        "handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API SOAT-FIAP",
	Description:      "API de exemplo com arquitetura hexagonal",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
